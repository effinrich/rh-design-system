{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "plugin:react/recommended",
    "plugin:react/jsx-runtime",
    "plugin:storybook/recommended",
    "plugin:mdx/recommended",
    "prettier"
  ],
  "settings": {
    "react": { "version": "detect" },
    "mdx/code-blocks": true
    // optional, if you want to disable language mapper, set it to `false`
    // if you want to override the default language mapper inside, you can provide your own
    // "mdx/language-mapper": {}
  },
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": ["react", "simple-import-sort", "import", "react-hooks"],
  "rules": {
    "react/react-in-jsx-scope": "off",
    "simple-import-sort/imports": "error",
    "simple-import-sort/exports": "error",
    "react-hooks/rules-of-hooks": "error", // Checks rules of Hooks
    "react-hooks/exhaustive-deps": [
      "warn",
      { "enableDangerousAutofixThisMayCauseInfiniteLoops": true }
    ],
    "import/first": "error",
    "import/newline-after-import": "error",
    "import/no-duplicates": "error",
    "no-self-compare": "warn"
  },
  "overrides": [
    {
      "files": "*.mdx",
      // "parser": "eslint-mdx", // enable `eslint-mdx` manually if it does not work
      "extends": "plugin:mdx/recommended"
    },
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        "simple-import-sort/imports": [
          "error",
          {
            "groups": [
              // Side effect imports.
              ["^\\u0000", "^\\.\\u0000"],
              // Packages `react` related packages come first.
              ["^react", "^@?\\w"],
              // Internal packages. Add project/appp specific directories as needed.
              // [
              //   "^(@|components|models|libs|lib|assets|utils|.storybook|storybook|navigators|screens|hooks|sdk)(/.*|$)"
              // ],
              // Parent imports. Put `..` last.
              ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
              // Other relative imports. Put same-folder imports and `.` last.
              ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
              // Style imports.
              ["^.+\\.?(css)$"]
            ]
          }
        ]
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "parser": "@typescript-eslint/parser",
      "plugins": ["@typescript-eslint"],
      "rules": {
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/no-non-null-assertion": "off"
      }
    }
  ]
}
